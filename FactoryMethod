package pdsfactory;
public abstract class Computador {
    public String type;
    public int hd;
    public int ram;
    public int cpu;  
   
    
    public abstract void configurar();

    public String getType() {
        return type;
    }

    public int getHd() {
        return hd;
    }

    public int getRam() {
        return ram;
    }

    public int getCpu() {
        return cpu;
    }

    @Override
    public String toString() {
        return "Computador{" + "type=" + type + ", hd=" + hd + ", ram=" + ram + ", cpu=" + cpu + '}';
    }
    
    
      }

package pdsfactory;
public class Pc extends Computador{
    public String type;
    public int hd;
    public int ram;
    public int cpu;  

    public Pc(String type, int hd, int ram, int cpu) {
        this.type = type;
        this.hd = hd;
        this.ram = ram;
        this.cpu = cpu;
    }

     public String getType() {
        return type;
    }

    public int getHd() {
        return hd;
    }

    public int getRam() {
        return ram;
    }

    public int getCpu() {
        return cpu;
    }

    public void configurar() {
        System.out.println("seu computador será" + type);
        
    }
 
    
}
public class Server extends Computador {
        public String type;
    public int hd;
    public int ram;
    public int cpu;  

    public Server(String type, int hd, int ram, int cpu) {
        this.type = type;
        this.hd = hd;
        this.ram = ram;
        this.cpu = cpu;
    }
   

    public String getType() {
        return type;
    }

    public int getHd() {
        return hd;
    }

    public int getRam() {
        return ram;
    }

    public int getCpu() {
        return cpu;
    }

    public void configurar() {
        System.out.println("seu computador será" + type);
        
        
    }

    @Override
    public String toString() {
        return "Server{" + "type=" + type + ", hd=" + hd + ", ram=" + ram + ", cpu=" + cpu + '}';
    }

  
}


public class ComputadorFactory {
    public Computador createComputador(String type){
        
        switch(type){
            case "Pc":
                return new Pc();
            case "Server":
                return new Server();
                
               
            
        }
       
    }
}


